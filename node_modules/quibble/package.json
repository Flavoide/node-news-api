{
  "_args": [
    [
      {
        "raw": "quibble@^0.4.0",
        "scope": null,
        "escapedName": "quibble",
        "name": "quibble",
        "rawSpec": "^0.4.0",
        "spec": ">=0.4.0 <0.5.0",
        "type": "range"
      },
      "/Users/vitorpaixao/server/node-news-api/node_modules/testdouble"
    ]
  ],
  "_from": "quibble@>=0.4.0 <0.5.0",
  "_id": "quibble@0.4.1",
  "_inCache": true,
  "_location": "/quibble",
  "_nodeVersion": "6.9.2",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/quibble-0.4.1.tgz_1490459395381_0.9770977813750505"
  },
  "_npmUser": {
    "name": "searls",
    "email": "searls@gmail.com"
  },
  "_npmVersion": "3.10.9",
  "_phantomChildren": {},
  "_requested": {
    "raw": "quibble@^0.4.0",
    "scope": null,
    "escapedName": "quibble",
    "name": "quibble",
    "rawSpec": "^0.4.0",
    "spec": ">=0.4.0 <0.5.0",
    "type": "range"
  },
  "_requiredBy": [
    "/testdouble"
  ],
  "_resolved": "https://registry.npmjs.org/quibble/-/quibble-0.4.1.tgz",
  "_shasum": "6107cf39f584233b3220724965ed6bb6e42d4d9b",
  "_shrinkwrap": null,
  "_spec": "quibble@^0.4.0",
  "_where": "/Users/vitorpaixao/server/node-news-api/node_modules/testdouble",
  "author": {
    "name": "Justin Searls",
    "email": "justin@testdouble.com",
    "url": "http://testdouble.com"
  },
  "bugs": {
    "url": "https://github.com/testdouble/quibble/issues"
  },
  "config": {
    "mocha_reporter": "dot"
  },
  "dependencies": {
    "lodash": "^4.17.2"
  },
  "description": "Makes it easy to replace require'd dependencies.",
  "devDependencies": {
    "chai": "^3.3.0",
    "coffee-script": "^1.10.0",
    "dont-break": "github:searls/dont-break",
    "mocha": "^2.3.3",
    "mocha-given": "^0.1.3",
    "pryjs": "^1.0.3",
    "testem": "^0.9.7"
  },
  "directories": {},
  "dist": {
    "shasum": "6107cf39f584233b3220724965ed6bb6e42d4d9b",
    "tarball": "https://registry.npmjs.org/quibble/-/quibble-0.4.1.tgz"
  },
  "engines": {
    "iojs": ">= 1.0.0",
    "node": ">= 0.12.0"
  },
  "gitHead": "7b48455cbf4e0e6e8aa1f5320d57d4c0c829adcf",
  "homepage": "https://github.com/testdouble/quibble",
  "license": "MIT",
  "maintainers": [
    {
      "name": "searls",
      "email": "searls@gmail.com"
    }
  ],
  "name": "quibble",
  "optionalDependencies": {},
  "readme": "# quibble\n\nQuibble is sorta like [proxyquire](https://github.com/thlorenz/proxyquire),\n[sandboxed-module](https://github.com/felixge/node-sandboxed-module) and\n[mockery](https://github.com/mfncooper/mockery). Using `quibble` you can replace\nhow `require` will behave for a given path, with its intended use being almost\nsolely unit testing.\n\n## Usage\n\nSay we're testing pants:\n\n```\nquibble = require('quibble')\n\ndescribe('pants', function(){\n  var subject, legs;\n  beforeEach(function(){\n    legs = quibble('./../lib/legs', function(){ return 'a leg';});\n\n    subject = require('./../lib/pants');\n  });\n  it('contains legs', function() {\n    expect(subject().left).toContain('a leg')\n    expect(subject().right).toContain('a leg')\n  })\n});\n```\n\nThat way, when the `subject` loaded from `lib/pants` runs `require('./legs')`,\nit will get back the function that returns `'a leg'`. The fake value is also\nreturned by `quibble`, which makes it easy to set and assign a test double in a\none-liner.\n\nFor more info on how this module is _really_ intended to be used, check out its\ninclusion in [testdouble.js](https://github.com/testdouble/testdouble.js/blob/master/docs/7-replacing-dependencies.md#nodejs)\n\n## Configuration\n\nThere's only one option: what you want to do with quibbled modules by default.\n\nSay you're pulling in [testdouble.js](https://github.com/testdouble/testdouble.js)\nand you want every quibbled module to default to a single test double function with\na name that matches its absolute path. You could do this:\n\n```\nquibble = require('quibble')\nbeforeEach(function(){\n  quibble.config({\n    defaultFakeCreator: function(path) {\n      return require('testdouble').create(path);\n    }\n  });\n});\n```\n\nWith this set up, running `quibble('./some/path')` will default to replacing all\n`require('../anything/that/matches/some/path')` invocations with a test double named\nafter the absolute path resolved to by `'./some/path'`.\n\nSpiffy!\n\n## How's it different?\n\nA few things that stand out about quibble:\n\n1. No partial mocking, as proxyquire does. [Partial Mocks](https://github.com/testdouble/contributing-tests/wiki/Partial-Mock)\nare often seen problematic and not helpful for unit testing designed to create clear boundaries\nbetween the SUT and its dependencies\n2. Global replacements, so it's easy to set up a few arrange steps in advance of\ninstantiating your subject (using `require` just as you normally would). The instantiation\nstyle of other libs is a little different (e.g. `require('./my/subject', {'/this/thing': stub})`\n3. Require strings are resolved to absolute paths. It can be a bit confusing using other tools because from the perspective of the test particular paths are knocked out _from the perspective of the subject_ and not from the test listing, which runs counter to how every other Node.js API works. Instead, here, the path of the file being knocked out is relative to whoever is knocking it out.\n4. A configurable default faker function. This lib was written to support the [testdouble.js](https://github.com/testdouble/testdouble.js) feature [td.replace()](https://github.com/testdouble/testdouble.js/blob/master/docs/7-replacing-dependencies.md#nodejs), in an effort to reduce the amount of per-test friction to repetitively create & pass in test doubles\n5. A `reset()` method that undoes everything, intended to be run `afterEach` test runs\n\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/testdouble/quibble.git"
  },
  "scripts": {
    "clean": "rm -rf lib",
    "compile": "coffee -o lib -c src",
    "postversion": "git push && git push --tags && npm publish",
    "prepublish": "npm run clean && npm run compile",
    "pretest:example": "npm run compile && cd example && npm i",
    "preversion": "git pull --rebase && npm run test:ci",
    "start": "testem",
    "test": "mocha -u mocha-given -R $npm_package_config_mocha_reporter --compilers coffee:coffee-script --recursive test/helper.coffee test/src/",
    "test:ci": "npm test && npm run test:example && npm run test:dependents",
    "test:debug": "npm test -- --debug-brk",
    "test:dependents": "npm run compile && dont-break --timeout 400",
    "test:example": "cd example && npm test"
  },
  "version": "0.4.1"
}
