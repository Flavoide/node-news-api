{
  "_args": [
    [
      {
        "raw": "testdouble@^1.6.0",
        "scope": null,
        "escapedName": "testdouble",
        "name": "testdouble",
        "rawSpec": "^1.6.0",
        "spec": ">=1.6.0 <2.0.0",
        "type": "range"
      },
      "/Users/vitorpaixao/server/testable-nodejs-api"
    ]
  ],
  "_from": "testdouble@>=1.6.0 <2.0.0",
  "_id": "testdouble@1.11.2",
  "_inCache": true,
  "_location": "/testdouble",
  "_nodeVersion": "4.6.2",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/testdouble-1.11.2.tgz_1488323030602_0.9316870621405542"
  },
  "_npmUser": {
    "name": "searls",
    "email": "searls@gmail.com"
  },
  "_npmVersion": "2.15.11",
  "_phantomChildren": {},
  "_requested": {
    "raw": "testdouble@^1.6.0",
    "scope": null,
    "escapedName": "testdouble",
    "name": "testdouble",
    "rawSpec": "^1.6.0",
    "spec": ">=1.6.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "https://registry.npmjs.org/testdouble/-/testdouble-1.11.2.tgz",
  "_shasum": "8b6a2e418ad1da9991e479203e37528dfd81d557",
  "_shrinkwrap": null,
  "_spec": "testdouble@^1.6.0",
  "_where": "/Users/vitorpaixao/server/testable-nodejs-api",
  "author": {
    "name": "Justin Searls",
    "email": "justin@testdouble.com",
    "url": "http://testdouble.com"
  },
  "browser": {
    "./lib/replace/module.js": "./lib/replace/module.browser.js",
    "quibble": "./lib/quibble.browser.js"
  },
  "bugs": {
    "url": "https://github.com/testdouble/testdouble.js/issues"
  },
  "config": {
    "build_file": "dist/testdouble.js",
    "mocha_reporter": "dot"
  },
  "dependencies": {
    "lodash": "^4.15.0",
    "quibble": "^0.4.0",
    "stringify-object": "^2.4.0"
  },
  "description": "A minimal test double library for TDD with JavaScript",
  "devDependencies": {
    "browserify": "^11.0.1",
    "chai": "^3.2.0",
    "codeclimate-test-reporter": "^0.3.1",
    "coffee-script": "^1.10.0",
    "disc": "^1.3.2",
    "headerify": "^1.0.1",
    "istanbul": "^0.4.2",
    "mocha": "^2.3.1",
    "mocha-given": "^0.1.3",
    "mocha-istanbul": "github:arikon/mocha-istanbul",
    "pryjs": "^1.0.3",
    "semver": "^5.3.0",
    "testem": "^0.9.4",
    "typescript": "^2.1.4"
  },
  "directories": {},
  "dist": {
    "shasum": "8b6a2e418ad1da9991e479203e37528dfd81d557",
    "tarball": "https://registry.npmjs.org/testdouble/-/testdouble-1.11.2.tgz"
  },
  "engines": {
    "iojs": ">= 1.0.0",
    "node": ">= 0.12.0"
  },
  "gitHead": "fadb80f7b0f0a7481709dd5264d242861a96d045",
  "homepage": "https://github.com/testdouble/testdouble.js",
  "keywords": [
    "tdd",
    "bdd",
    "mock",
    "stub",
    "spy",
    "test double",
    "double"
  ],
  "license": "MIT",
  "main": "lib/testdouble.js",
  "maintainers": [
    {
      "name": "jasonkarns",
      "email": "jason@karns.name"
    },
    {
      "name": "searls",
      "email": "searls@gmail.com"
    }
  ],
  "name": "testdouble",
  "optionalDependencies": {},
  "readme": "# testdouble.js\n\n[![Build Status](https://secure.travis-ci.org/testdouble/testdouble.js.svg)](http://travis-ci.org/testdouble/testdouble.js) [![npmjs](https://img.shields.io/badge/npm-testdouble-red.svg)](https://www.npmjs.com/package/testdouble)\n[![Test Coverage](https://codeclimate.com/github/testdouble/testdouble.js/badges/coverage.svg)](https://codeclimate.com/github/testdouble/testdouble.js/coverage)\n\nWelcome! Are you writing JavaScript tests and in the market for a mocking library to\nfake out real things for you? testdouble.js is an opinionated, carefully-designed\ntest double library maintained by, oddly enough, a software agency that's also\nnamed [Test Double](http://testdouble.com).\n\nIf you practice test-driven development, testdouble.js was designed to promote\nterse, clear, and easy-to-understand tests. There's an awful lot to cover, so\nplease take some time and enjoy our documentation, which itself is designed to\nshow you how to make the most out of test doubles in your tests.\n\n## The pitch\n\nInterested in learning what testdouble.js is, why it exists, and what the API\noffers? The quickest path is this fast-paced 20-minute talk:\n\n[<img width=\"633\" alt=\"screenshot of testdouble.js talk\" src=\"https://cloud.githubusercontent.com/assets/79303/16356401/1a9d7ffc-3aa4-11e6-833f-9d6094547297.png\">\n](https://vimeo.com/169413322)\n\n## Coming from Sinon.js?\n\nRight now, Sinon.js is the test double incumbent in JavaScript, with over 1.7\nmillion downloads in the last month. If you've got experience with Sinon, [check\nout our side-by-side\ncomparison](http://blog.testdouble.com/posts/2016-03-13-testdouble-vs-sinon.html)\nto see why we wrote testdouble.js and how some of the API translates.\n\n## The Very Basics\n\nBefore diving into our in-depth docs, here is a quick intro of the basic uses:\n\n### Stubbing return values for functions\n\n```js\nvar td = require('testdouble');\n\nvar fetch = td.function();\ntd.when(fetch(42)).thenReturn('Jane User');\n\nfetch(42); // -> 'Jane User'\n```\n\n### Verifying a function was invoked\n\n```js\nvar td = require('testdouble');\n\nvar save = td.function('.save');\nsave(41, 'Jane');\n\ntd.verify(save(41, 'Jill'));\n//\n// Error: Unsatisfied verification on test double `.save`.\n//\n//   Wanted:\n//     - called with `(41, \"Jill\")`.\n//\n//   But was actually called:\n//     - called with `(41, \"Jane\")`.\n```\n\n## Docs\n\nAll of our docs are in the [docs/](docs/) directory inside this repository and\nnumbered for easy reading in the priority-order we anticipate people needing them.\nHere's a rough outline:\n\n1. [Installation](docs/1-installation.md#installing-testdoublejs)\n  1. [for Node.js](docs/1-installation.md#for-use-in-nodejs-or-browserify)\n  2. [for browsers](docs/1-installation.md#for-use-in-browsers)\n  3. [initial configuration](docs/1-installation.md#configuring-testdoublejs-setting-up-in-your-test-suite)\n2. [Purpose of testdouble.js](docs/2-howto-purpose.md#background)\n  1. [in unit tests](docs/2-howto-purpose.md#test-doubles-and-unit-tests)\n  2. [in integration tests](docs/2-howto-purpose.md#test-doubles-and-integration-tests)\n3. [Getting started tutorial](docs/3-getting-started.md#getting-started)\n4. [Creating test doubles](docs/4-creating-test-doubles.md#creating-test-doubles)\n  1. [test double functions with `td.function()`](docs/4-creating-test-doubles.md#tdfunctionname)\n  2. [test double objects with `td.object()`](docs/4-creating-test-doubles.md#tdobject)\n    1. [objects that mirror a constructor function](docs/4-creating-test-doubles.md#objectsomeconstructorfunction)\n    2. [objects that mirror an object of functions](docs/4-creating-test-doubles.md#objectsomeobjectwithfunctions)\n    3. [object of functions for an array of names](docs/4-creating-test-doubles.md#objectfunctionnames)\n    4. [object of any functions using ES2015 Proxy](docs/4-creating-test-doubles.md#objectobjectname)\n5. [Stubbing responses](docs/5-stubbing-results.md#stubbing-behavior)\n  1. [td.when() API](docs/5-stubbing-results.md#tdwhen)\n  2. [equality argument matching](docs/5-stubbing-results.md#simple-precise-argument-stubbing)\n  3. [one-liner stubbings](docs/5-stubbing-results.md#one-liner-stubbings)\n  4. [stubbing sequential return values](docs/5-stubbing-results.md#stubbing-sequential-return-values)\n  5. [argument matchers](docs/5-stubbing-results.md#loosening-stubbings-with-argument-matchers)\n    1. [td.matchers.anything()](docs/5-stubbing-results.md#tdmatchersanything)\n    2. [td.matchers.isA()](docs/5-stubbing-results.md#tdmatchersisa)\n    3. [td.matchers.contains()](docs/5-stubbing-results.md#tdmatcherscontains)\n      1. [matching strings](docs/5-stubbing-results.md#strings)\n      2. [matching arrays](docs/5-stubbing-results.md#arrays)\n      3. [matching objects](docs/5-stubbing-results.md#objects)\n    4. [td.matchers.argThat()](docs/5-stubbing-results.md#tdmatchersargthat)\n    5. [td.matchers.not()](docs/5-stubbing-results.md#tdmatchersnot)\n  6. [Stubbing callback APIs](docs/5-stubbing-results.md#stubbing-callback-apis)\n  7. [Stub exceptions with thenThrow](docs/5-stubbing-results.md#stub-exceptions-with-thenthrow)\n  8. [Stub promises with thenResolve and thenReject](docs/5-stubbing-results.md#stub-promises-with-thenresolve-and-thenreject)\n  9. [Stub side effects with thenDo](docs/5-stubbing-results.md#stub-side-effects-with-thendo)\n  10. [Configuring stubbings](docs/5-stubbing-results.md#configuring-stubbings)\n    1. [ignoreExtraArgs](docs/5-stubbing-results.md#ignoreextraargs)\n    2. [times](docs/5-stubbing-results.md#times)\n6. [Verifying invocations](docs/6-verifying-invocations.md#verifying-interactions)\n  1. [td.verify() API](docs/6-verifying-invocations.md#tdverify)\n  2. [equality argument matching](docs/6-verifying-invocations.md#arguments)\n  3. [argument matchers](docs/6-verifying-invocations.md#relaxing-verifications-with-argument-matchers)\n    1. [td.matchers.anything()](docs/6-verifying-invocations.md#tdmatchersanything)\n    2. [td.matchers.isA()](docs/6-verifying-invocations.md#tdmatchersisa)\n    3. [td.matchers.contains()](docs/6-verifying-invocations.md#tdmatcherscontains)\n      1. [matching strings](docs/6-verifying-invocations.md#strings)\n      2. [matching arrays](docs/6-verifying-invocations.md#arrays)\n      3. [matching objects](docs/6-verifying-invocations.md#objects)\n    4. [td.matchers.argThat()](docs/6-verifying-invocations.md#tdmatchersargthat)\n  4. [Argument captors](docs/6-verifying-invocations.md#multi-phase-assertions-with-argument-captors)\n  5. [Configuring verifications](docs/6-verifying-invocations.md#configuring-verifications)\n    1. [ignoreExtraArgs](docs/6-verifying-invocations.md#ignoreextraargs)\n    2. [times](docs/6-verifying-invocations.md#times)\n7. [Replacing dependencies with test doubles](docs/7-replacing-dependencies.md#replacing-real-dependencies-with-test-doubles)\n  1. [for Node.js](docs/7-replacing-dependencies.md#nodejs)\n  2. [for Browser JS](docs/7-replacing-dependencies.md#browser)\n  3. [td.replace() API](docs/7-replacing-dependencies.md#testdoublereplace-api)\n8. [Writing custom argument matchers](docs/8-custom-matchers.md#custom-argument-matchers)\n9. [Debugging with testdouble.js](docs/9-debugging.md#debugging-with-testdoublejs)\n  1. [td.explain() API](docs/9-debugging.md#tdexplainsometestdouble)\n10. [Plugins](docs/A-plugins.md#plugins)\n  1. [testdouble-chai](https://github.com/basecase/testdouble-chai)\n  2. [testdouble-jasmine](https://github.com/BrianGenisio/testdouble-jasmine)\n11. [Frequently Asked Questions](docs/B-frequently-asked-questions.md#frequently-asked-questions)\n  1. [Why doesn't `td.replace()` work with external CommonJS modules?](docs/B-frequently-asked-questions.md#why-doesnt-tdreplace-work-with-external-commonjs-modules)\n12. [Configuration](docs/C-configuration.md)\n  1. [td.config](docs/C-configuration.md#tdconfig)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/testdouble/testdouble.js.git"
  },
  "scripts": {
    "clean": "rm -rf generated dist lib .coverage && npm run clean:dist",
    "clean:dist": "git checkout -- dist",
    "compile": "npm run compile:node && npm run compile:test && npm run compile:browser",
    "compile:browser": "browserify . --standalone td --outfile $npm_package_config_build_file --ignore 'quibble' -p headerify",
    "compile:node": "coffee --output lib --compile src",
    "compile:test": "coffee --output generated/test --compile test",
    "postversion": "git push --tags && npm run version:changelog && git push && npm publish",
    "prepublish": "npm run compile",
    "preversion": "git pull --rebase && npm run test:ci",
    "test": "mocha --ui mocha-given --reporter $npm_package_config_mocha_reporter --compilers coffee:coffee-script $EXTRA_MOCHA_ARGS --recursive test/node-helper.coffee test/src",
    "test:all": "npm test && testem ci && npm run test:example && npm run test:typescript",
    "test:browser": "npm run compile && testem ci",
    "test:ci": "npm run clean && npm run compile && npm run test:all && npm run clean:dist && echo \"All done!\"",
    "test:cover": "npm run compile:node && npm run test:cover:instrument && npm run test:cover:run",
    "test:cover:instrument": "istanbul instrument lib -o .coverage/lib",
    "test:cover:report": "codeclimate-test-reporter < .coverage/lcov.info",
    "test:cover:run": "EXTRA_MOCHA_ARGS=\"--reporter mocha-istanbul\" COVER=.coverage/lib ISTANBUL_REPORT_DIR=.coverage ISTANBUL_REPORTERS=lcov,html npm run test",
    "test:debug": "npm test -- --debug-brk",
    "test:example": "npm run test:example:node && npm run test:example:lineman && npm run test:example:webpack && npm run test:example:babel",
    "test:example:babel": "cd examples/babel && npm i && npm test && cd ../..",
    "test:example:lineman": "cd examples/lineman && npm i && npm test && cd ../..",
    "test:example:node": "cd examples/node && npm i && npm test && cd ../..",
    "test:example:webpack": "cd examples/webpack && npm i && npm test & cd ../..",
    "test:typescript": "tsc --noEmit -p ./test/src/typescript",
    "version": "npm run version:write && npm run compile && git add dist src/version.coffee",
    "version:changelog": "if command -v github_changelog_generator &>/dev/null; then github_changelog_generator; git commit -m \"Changelog for $npm_package_version\" CHANGELOG.md; else echo Versioning requires you first run 'gem install github_changelog_generator' >&2; fi",
    "version:write": "echo \"module.exports = '$npm_package_version'\" > src/version.coffee"
  },
  "typings": "./index.d.ts",
  "version": "1.11.2"
}
